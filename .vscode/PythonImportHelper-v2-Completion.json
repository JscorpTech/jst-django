[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "print",
        "importPath": "rich",
        "description": "rich",
        "isExtraImport": true,
        "detail": "rich",
        "documentation": {}
    },
    {
        "label": "print",
        "importPath": "rich",
        "description": "rich",
        "isExtraImport": true,
        "detail": "rich",
        "documentation": {}
    },
    {
        "label": "print",
        "importPath": "rich",
        "description": "rich",
        "isExtraImport": true,
        "detail": "rich",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generator",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Annotated",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "isort",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "isort",
        "description": "isort",
        "detail": "isort",
        "documentation": {}
    },
    {
        "label": "black",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "black",
        "description": "black",
        "detail": "black",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "questionary.question",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "questionary.question",
        "description": "questionary.question",
        "detail": "questionary.question",
        "documentation": {}
    },
    {
        "label": "questionary",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "questionary",
        "description": "questionary",
        "detail": "questionary",
        "documentation": {}
    },
    {
        "label": "join",
        "importPath": "os.path",
        "description": "os.path",
        "isExtraImport": true,
        "detail": "os.path",
        "documentation": {}
    },
    {
        "label": "typer",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "typer",
        "description": "typer",
        "detail": "typer",
        "documentation": {}
    },
    {
        "label": "cookiecutter",
        "importPath": "cookiecutter.main",
        "description": "cookiecutter.main",
        "isExtraImport": true,
        "detail": "cookiecutter.main",
        "documentation": {}
    },
    {
        "label": "JstAiCommit",
        "importPath": "jst_aicommit.main",
        "description": "jst_aicommit.main",
        "isExtraImport": true,
        "detail": "jst_aicommit.main",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "StreamHandler",
        "importPath": "colorlog",
        "description": "colorlog",
        "isExtraImport": true,
        "detail": "colorlog",
        "documentation": {}
    },
    {
        "label": "ColoredFormatter",
        "importPath": "colorlog",
        "description": "colorlog",
        "isExtraImport": true,
        "detail": "colorlog",
        "documentation": {}
    },
    {
        "label": "zipfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "zipfile",
        "description": "zipfile",
        "detail": "zipfile",
        "documentation": {}
    },
    {
        "label": "tempfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tempfile",
        "description": "tempfile",
        "detail": "tempfile",
        "documentation": {}
    },
    {
        "label": "shutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shutil",
        "description": "shutil",
        "detail": "shutil",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "pofile",
        "importPath": "polib",
        "description": "polib",
        "isExtraImport": true,
        "detail": "polib",
        "documentation": {}
    },
    {
        "label": "tqdm",
        "importPath": "tqdm",
        "description": "tqdm",
        "isExtraImport": true,
        "detail": "tqdm",
        "documentation": {}
    },
    {
        "label": "Jst",
        "kind": 6,
        "importPath": "src.jst_django.utils.base",
        "description": "src.jst_django.utils.base",
        "peekOfCode": "class Jst:\n    def __init__(self):\n        self.base_dir = os.getcwd()\n        self.config = {\n            \"dirs\": {\n                \"apps\": \"./\",\n                \"locale\": \"./locale/\",\n            },\n            \"stubs\": {\n                \"model\": \"django/model.stub\",",
        "detail": "src.jst_django.utils.base",
        "documentation": {}
    },
    {
        "label": "Code",
        "kind": 6,
        "importPath": "src.jst_django.utils.code",
        "description": "src.jst_django.utils.code",
        "peekOfCode": "class Code:\n    def __init__(self) -> None:\n        pass\n    @staticmethod\n    def format_code(file_path: Union[str]) -> None:\n        \"\"\"Black and Isort format code\"\"\"\n        with open(file_path, \"r\") as file:\n            code = black.format_str(\n                isort.code(file.read(), config=isort.Config(profile=\"black\", line_length=120)),\n                mode=black.FileMode(line_length=120),",
        "detail": "src.jst_django.utils.code",
        "documentation": {}
    },
    {
        "label": "File",
        "kind": 6,
        "importPath": "src.jst_django.utils.file",
        "description": "src.jst_django.utils.file",
        "peekOfCode": "class File:\n    def __init__(self) -> None:\n        pass\n    @staticmethod\n    def mkdir(path):\n        Path(path).mkdir(parents=True, exist_ok=True)",
        "detail": "src.jst_django.utils.file",
        "documentation": {}
    },
    {
        "label": "Github",
        "kind": 6,
        "importPath": "src.jst_django.api",
        "description": "src.jst_django.api",
        "peekOfCode": "class Github:\n    def __init__(self, repo: str = \"django\") -> None:\n        self.project_id = \"JscorpTech\"\n        self.repo = repo\n        self.relase_urls = {\n            \"list\": \"releases\",\n            \"latest\": \"releases/latest\",\n            \"detail\": \"releases/tags/{}\",\n        }\n    def request(self, action):",
        "detail": "src.jst_django.api",
        "documentation": {}
    },
    {
        "label": "Generate",
        "kind": 6,
        "importPath": "src.jst_django.generate",
        "description": "src.jst_django.generate",
        "peekOfCode": "class Generate:\n    name: Optional[str] = None\n    file_name: Optional[str] = None\n    def __init__(self) -> None:\n        self.config = Jst().load_config()\n        dirs = self.config.get(\"dirs\", {})\n        self.path = {\n            \"apps\": dirs.get(\"apps\", \"./core/apps/\"),\n            \"model\": dirs.get(\"models\", \"models/\"),\n            \"serializer\": dirs.get(\"serializers\", \"serializers/\"),",
        "detail": "src.jst_django.generate",
        "documentation": {}
    },
    {
        "label": "install_module",
        "kind": 2,
        "importPath": "src.jst_django.jst",
        "description": "src.jst_django.jst",
        "peekOfCode": "def install_module(\n    module_name: Annotated[str, typer.Argument()] = None, version: str = typer.Option(None, \"--version\", \"-v\")\n):\n    Module().run(module_name, version)\n@app.command(name=\"create\", help=\"Yangi loyiha yaratish\")\ndef create_project(version: str = typer.Option(None, \"--version\", \"-v\")):\n    if version is None:\n        version = Github().latest_release()\n        print(\"version: \", version)\n    else:",
        "detail": "src.jst_django.jst",
        "documentation": {}
    },
    {
        "label": "create_project",
        "kind": 2,
        "importPath": "src.jst_django.jst",
        "description": "src.jst_django.jst",
        "peekOfCode": "def create_project(version: str = typer.Option(None, \"--version\", \"-v\")):\n    if version is None:\n        version = Github().latest_release()\n        print(\"version: \", version)\n    else:\n        Github().releases(version)\n    template = questionary.text(\"Template: \", default=\"django\").ask()\n    if template.startswith(\"http\") is not True:\n        template = \"https://github.com/JscorpTech/{}\".format(template)\n    cookiecutter(template, checkout=version)",
        "detail": "src.jst_django.jst",
        "documentation": {}
    },
    {
        "label": "generate",
        "kind": 2,
        "importPath": "src.jst_django.jst",
        "description": "src.jst_django.jst",
        "peekOfCode": "def generate():\n    Generate().run()\n@app.command(name=\"aic\", help=\"O'zgarishlarga qarab atomatik git commit yaratadi\")\ndef aic():\n    JstAiCommit().run()\n@app.command(name=\"init\", help=\"jst.json config faylini yaratish\")\ndef init():\n    Jst().make_config()\n@app.command(name=\"requirements\", help=\"Kerakli kutubxonalar\")\ndef requirements():",
        "detail": "src.jst_django.jst",
        "documentation": {}
    },
    {
        "label": "aic",
        "kind": 2,
        "importPath": "src.jst_django.jst",
        "description": "src.jst_django.jst",
        "peekOfCode": "def aic():\n    JstAiCommit().run()\n@app.command(name=\"init\", help=\"jst.json config faylini yaratish\")\ndef init():\n    Jst().make_config()\n@app.command(name=\"requirements\", help=\"Kerakli kutubxonalar\")\ndef requirements():\n    Jst().requirements()\n@app.command(name=\"translate\", help=\"Avtomatik tarjima\")\ndef translate():",
        "detail": "src.jst_django.jst",
        "documentation": {}
    },
    {
        "label": "init",
        "kind": 2,
        "importPath": "src.jst_django.jst",
        "description": "src.jst_django.jst",
        "peekOfCode": "def init():\n    Jst().make_config()\n@app.command(name=\"requirements\", help=\"Kerakli kutubxonalar\")\ndef requirements():\n    Jst().requirements()\n@app.command(name=\"translate\", help=\"Avtomatik tarjima\")\ndef translate():\n    Translate().run()\nif __name__ == \"__main__\":\n    app()",
        "detail": "src.jst_django.jst",
        "documentation": {}
    },
    {
        "label": "requirements",
        "kind": 2,
        "importPath": "src.jst_django.jst",
        "description": "src.jst_django.jst",
        "peekOfCode": "def requirements():\n    Jst().requirements()\n@app.command(name=\"translate\", help=\"Avtomatik tarjima\")\ndef translate():\n    Translate().run()\nif __name__ == \"__main__\":\n    app()",
        "detail": "src.jst_django.jst",
        "documentation": {}
    },
    {
        "label": "translate",
        "kind": 2,
        "importPath": "src.jst_django.jst",
        "description": "src.jst_django.jst",
        "peekOfCode": "def translate():\n    Translate().run()\nif __name__ == \"__main__\":\n    app()",
        "detail": "src.jst_django.jst",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "src.jst_django.jst",
        "description": "src.jst_django.jst",
        "peekOfCode": "app = typer.Typer()\nBASE_DIR = os.getcwd()\n@app.command(name=\"install\", help=\"Modul o'rnatish\")\ndef install_module(\n    module_name: Annotated[str, typer.Argument()] = None, version: str = typer.Option(None, \"--version\", \"-v\")\n):\n    Module().run(module_name, version)\n@app.command(name=\"create\", help=\"Yangi loyiha yaratish\")\ndef create_project(version: str = typer.Option(None, \"--version\", \"-v\")):\n    if version is None:",
        "detail": "src.jst_django.jst",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "src.jst_django.jst",
        "description": "src.jst_django.jst",
        "peekOfCode": "BASE_DIR = os.getcwd()\n@app.command(name=\"install\", help=\"Modul o'rnatish\")\ndef install_module(\n    module_name: Annotated[str, typer.Argument()] = None, version: str = typer.Option(None, \"--version\", \"-v\")\n):\n    Module().run(module_name, version)\n@app.command(name=\"create\", help=\"Yangi loyiha yaratish\")\ndef create_project(version: str = typer.Option(None, \"--version\", \"-v\")):\n    if version is None:\n        version = Github().latest_release()",
        "detail": "src.jst_django.jst",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 5,
        "importPath": "src.jst_django.logger",
        "description": "src.jst_django.logger",
        "peekOfCode": "handler = StreamHandler()\nhandler.setFormatter(ColoredFormatter(\"%(log_color)s %(asctime)s %(levelname)s %(message)s\"))\nlogging.basicConfig(level=logging.INFO, handlers=[handler])",
        "detail": "src.jst_django.logger",
        "documentation": {}
    },
    {
        "label": "Module",
        "kind": 6,
        "importPath": "src.jst_django.module",
        "description": "src.jst_django.module",
        "peekOfCode": "class Module:\n    modules = {\n        \"default\": \"https://github.com/JscorpTech/module-default.git\",\n        \"authbot\": \"https://github.com/JscorpTech/module-authbot.git\",\n        \"websocket\": \"https://github.com/JscorpTech/module-websocket.git\",\n    }\n    def __init__(self):\n        self.config = Jst().load_config()\n    def _subfolder_to_parent(self, path):\n        \"\"\"ichki papkadagi ko'dlarni parent papkaga ko'chirish\"\"\"",
        "detail": "src.jst_django.module",
        "documentation": {}
    },
    {
        "label": "Translate",
        "kind": 6,
        "importPath": "src.jst_django.translate",
        "description": "src.jst_django.translate",
        "peekOfCode": "class Translate:\n    messages = None\n    def __init__(self) -> None:\n        self.langs: Union[List] = [\n            \"uzn_Latn\",\n            \"uzn_Cyrl\",\n            \"rus_Cyrl\",\n            \"eng_Latn\",\n        ]\n        self.config = Jst().load_config()",
        "detail": "src.jst_django.translate",
        "documentation": {}
    }
]